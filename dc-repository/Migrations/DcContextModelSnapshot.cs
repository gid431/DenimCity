// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dc_repository.Context;

#nullable disable

namespace dc_repository.Migrations
{
    [DbContext(typeof(DcContext))]
    partial class DcContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.15");

            modelBuilder.Entity("dc_repository.Entities.Articolo", b =>
                {
                    b.Property<int>("IdArticolo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodiceABarre")
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("CodiceProdotto")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAggiornamento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDiCreazione")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descrizione")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Giancenza")
                        .HasColumnType("TEXT");

                    b.Property<int>("MarchioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Operatore")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrezzoAcquisto")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrezzoVendita")
                        .HasColumnType("TEXT");

                    b.Property<int>("Sesso")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipologiaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UrlImmagine")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("IdArticolo");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("MarchioId");

                    b.HasIndex("TipologiaId");

                    b.ToTable("Articoli");
                });

            modelBuilder.Entity("dc_repository.Entities.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAggiornamento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDiCreazione")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Operatore")
                        .HasColumnType("TEXT");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("dc_repository.Entities.Marchio", b =>
                {
                    b.Property<int>("IdMarchi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAggiornamento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDiCreazione")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Operatore")
                        .HasColumnType("TEXT");

                    b.HasKey("IdMarchi");

                    b.ToTable("Marchi");
                });

            modelBuilder.Entity("dc_repository.Entities.Movimento", b =>
                {
                    b.Property<int>("IdMovimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAggiornamento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDiCreazione")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataMovimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Operatore")
                        .HasColumnType("TEXT");

                    b.Property<int>("SoggettoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoMovimentoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Totale")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotaleIva")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotaleMovimento")
                        .HasColumnType("TEXT");

                    b.HasKey("IdMovimento");

                    b.HasIndex("SoggettoId");

                    b.HasIndex("TipoMovimentoId");

                    b.ToTable("Movimenti");
                });

            modelBuilder.Entity("dc_repository.Entities.MovimentoRiga", b =>
                {
                    b.Property<int>("IdMovimentoRiga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArticoloId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAggiornamento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDiCreazione")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Iva")
                        .HasColumnType("TEXT");

                    b.Property<int>("MovimentoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Operatore")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Prezzo")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Quantita")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Sconto")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotaleRiga")
                        .HasColumnType("TEXT");

                    b.HasKey("IdMovimentoRiga");

                    b.HasIndex("ArticoloId");

                    b.HasIndex("MovimentoId");

                    b.ToTable("MovimentoRighe");
                });

            modelBuilder.Entity("dc_repository.Entities.Soggetto", b =>
                {
                    b.Property<int>("IdSoggetto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cap")
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cellulare")
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("CodiceFiscale")
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAggiornamento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDiCreazione")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Indirizzo")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroTelefono")
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("Operatore")
                        .HasColumnType("TEXT");

                    b.Property<string>("PartitaIva")
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<string>("RagioneSociale")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoSoggetto")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdSoggetto");

                    b.ToTable("Soggetti");
                });

            modelBuilder.Entity("dc_repository.Entities.Tipologia", b =>
                {
                    b.Property<int>("IdTipologia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAggiornamento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDiCreazione")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Operatore")
                        .HasColumnType("TEXT");

                    b.HasKey("IdTipologia");

                    b.ToTable("Tipologie");
                });

            modelBuilder.Entity("dc_repository.Entities.TipoMovimento", b =>
                {
                    b.Property<int>("IdTipoMovimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAggiornamento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDiCreazione")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Operatore")
                        .HasColumnType("TEXT");

                    b.Property<int>("Segno")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdTipoMovimento");

                    b.ToTable("TipoMovimenti");
                });

            modelBuilder.Entity("dc_repository.Entities.Articolo", b =>
                {
                    b.HasOne("dc_repository.Entities.Categoria", "Categoria")
                        .WithMany("Articoli")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dc_repository.Entities.Marchio", "Marchio")
                        .WithMany()
                        .HasForeignKey("MarchioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dc_repository.Entities.Tipologia", "Tipologia")
                        .WithMany("Articoli")
                        .HasForeignKey("TipologiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Marchio");

                    b.Navigation("Tipologia");
                });

            modelBuilder.Entity("dc_repository.Entities.Movimento", b =>
                {
                    b.HasOne("dc_repository.Entities.Soggetto", "Soggetto")
                        .WithMany("Movimenti")
                        .HasForeignKey("SoggettoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dc_repository.Entities.TipoMovimento", "TipoMovimento")
                        .WithMany("Movimenti")
                        .HasForeignKey("TipoMovimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Soggetto");

                    b.Navigation("TipoMovimento");
                });

            modelBuilder.Entity("dc_repository.Entities.MovimentoRiga", b =>
                {
                    b.HasOne("dc_repository.Entities.Articolo", "Articolo")
                        .WithMany("Righe")
                        .HasForeignKey("ArticoloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dc_repository.Entities.Movimento", "Movimento")
                        .WithMany("Righe")
                        .HasForeignKey("MovimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articolo");

                    b.Navigation("Movimento");
                });

            modelBuilder.Entity("dc_repository.Entities.Articolo", b =>
                {
                    b.Navigation("Righe");
                });

            modelBuilder.Entity("dc_repository.Entities.Categoria", b =>
                {
                    b.Navigation("Articoli");
                });

            modelBuilder.Entity("dc_repository.Entities.Movimento", b =>
                {
                    b.Navigation("Righe");
                });

            modelBuilder.Entity("dc_repository.Entities.Soggetto", b =>
                {
                    b.Navigation("Movimenti");
                });

            modelBuilder.Entity("dc_repository.Entities.Tipologia", b =>
                {
                    b.Navigation("Articoli");
                });

            modelBuilder.Entity("dc_repository.Entities.TipoMovimento", b =>
                {
                    b.Navigation("Movimenti");
                });
#pragma warning restore 612, 618
        }
    }
}
